package com.jgp.test;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.ArgumentMatchers.any;
import static org.mockito.Mockito.when;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.ResponseEntity;
import org.springframework.mock.web.MockHttpServletRequest;
import org.springframework.web.context.request.RequestContextHolder;
import org.springframework.web.context.request.ServletRequestAttributes;

import com.iue.controlador.PacientesControlador;
import com.iue.entidad.Pacientes;
import com.iue.repositorio.PacientesRepositorio;

@ExtendWith(MockitoExtension.class)
public class PacientesControladorPruebaU
{ 
	@InjectMocks
	PacientesControlador pacientesControlador;
	
	@Mock
	PacientesRepositorio pacientesRepositorio;
	
	@Test
	public void testAddPacientes() 
	{
		
		// Given Algun Contexto de Variables
		MockHttpServletRequest request = new MockHttpServletRequest();
		RequestContextHolder.setRequestAttributes(new ServletRequestAttributes(request));
		Pacientes pacientes = new Pacientes();
		pacientes.setId((long) 1);

		// When alguna Accion Requerida Entonces.... 
		when(pacientesRepositorio.save(any(Pacientes.class))).thenReturn(pacientes);
		
		// Entonces Realizo la prueba si es verdadera
		Pacientes pacientesToAdd = new Pacientes(0, 1, 1234, "Natalia", "Vergara", "nataliav@gmail.com", "Diag31", 3333333);
		ResponseEntity<Object> responseEntity = pacientesControlador.addPacientes(pacientesToAdd);
		
		assertThat(responseEntity.getStatusCodeValue()).isEqualTo(201);
		assertThat(responseEntity.getHeaders().getLocation().getPath()).isEqualTo("/1");
	}
	
	@Test
	public void testFindAll() 
	{
		// given
		Pacientes pacientes1 = new Pacientes(0, 1, 1234, "Natalia", "Vergara", "nataliav@gmail.com", "Diag31", 3333333);
		Pacientes pacientes2 = new Pacientes(1, 1, 2345, "Alex", "Vergara", "alexv@gmail.com", "Diag31", 3333313);
		List<Pacientes> list = new ArrayList<Pacientes>();
		list.addAll(Arrays.asList(pacientes1, pacientes2));

		when(pacientesRepositorio.findAll()).thenReturn(list);

		// when
		Pacientes result = pacientesControlador.getPacientes();

		// then
		assertThat(result.getPacientesList().size()).isEqualTo(2);
		
		assertThat(((Pacientes) result.getPacientesList().get(0)).getDocumento())
						.isEqualTo(pacientes1.getDocumento());
		
		assertThat(((Pacientes) result.getPacientesList().get(1)).getDocumento())
						.isEqualTo(pacientes2.getDocumento());
	}
}

